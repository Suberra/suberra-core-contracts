{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "ExecuteMsg",
  "oneOf": [
    {
      "type": "object",
      "required": [
        "create_agreement"
      ],
      "properties": {
        "create_agreement": {
          "type": "object",
          "required": [
            "amount",
            "interval",
            "receiver"
          ],
          "properties": {
            "amount": {
              "$ref": "#/definitions/Uint256"
            },
            "end_at": {
              "type": [
                "integer",
                "null"
              ],
              "format": "uint64",
              "minimum": 0.0
            },
            "interval": {
              "type": "integer",
              "format": "uint64",
              "minimum": 0.0
            },
            "receiver": {
              "type": "string"
            },
            "start_at": {
              "type": [
                "integer",
                "null"
              ],
              "format": "uint64",
              "minimum": 0.0
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "transfer"
      ],
      "properties": {
        "transfer": {
          "type": "object",
          "required": [
            "agreement_id"
          ],
          "properties": {
            "agreement_id": {
              "type": "integer",
              "format": "uint64",
              "minimum": 0.0
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "work"
      ],
      "properties": {
        "work": {
          "type": "object",
          "required": [
            "payload"
          ],
          "properties": {
            "payload": {
              "$ref": "#/definitions/Binary"
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "cancel_agreement"
      ],
      "properties": {
        "cancel_agreement": {
          "type": "object",
          "required": [
            "agreement_id"
          ],
          "properties": {
            "agreement_id": {
              "type": "integer",
              "format": "uint64",
              "minimum": 0.0
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "terminate_agreement"
      ],
      "properties": {
        "terminate_agreement": {
          "type": "object",
          "required": [
            "agreement_id"
          ],
          "properties": {
            "agreement_id": {
              "type": "integer",
              "format": "uint64",
              "minimum": 0.0
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "update_config"
      ],
      "properties": {
        "update_config": {
          "type": "object",
          "properties": {
            "fee_address": {
              "type": [
                "string",
                "null"
              ]
            },
            "fee_bps": {
              "type": [
                "integer",
                "null"
              ],
              "format": "uint64",
              "minimum": 0.0
            },
            "job_registry_contract": {
              "type": [
                "string",
                "null"
              ]
            },
            "max_fee": {
              "anyOf": [
                {
                  "$ref": "#/definitions/Uint256"
                },
                {
                  "type": "null"
                }
              ]
            },
            "minimum_interval": {
              "type": [
                "integer",
                "null"
              ],
              "format": "uint64",
              "minimum": 0.0
            },
            "new_owner": {
              "type": [
                "string",
                "null"
              ]
            }
          }
        }
      },
      "additionalProperties": false
    }
  ],
  "definitions": {
    "Binary": {
      "description": "Binary is a wrapper around Vec<u8> to add base64 de/serialization with serde. It also adds some helper methods to help encode inline.\n\nThis is only needed as serde-json-{core,wasm} has a horrible encoding for Vec<u8>",
      "type": "string"
    },
    "Uint256": {
      "type": "string"
    }
  }
}
